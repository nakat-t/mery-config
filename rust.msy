#TagBegin=
#TagEnd=
#CommentBegin1=/*
#CommentEnd1=*/
#LineComment1=//
#CommentBegin2=
#CommentEnd2=
#LineComment2=
#SpecialSyntax=None
#ScriptBegin=
#ScriptEnd=
#QuoteSingle=True
#QuoteDouble=True
#QuoteContinue=False
#EscapeCharacter=\

#Word Color=0, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
as
break
const
continue
crate
else
enum
extern
false
fn
for
if
impl
in
let
loop
match
mod
move
mut
pub
ref
return
Self
self
static
struct
super
trait
true
type
unsafe
use
where
while
abstract
alignof
become
box
do
final
macro
offsetof
override
priv
proc
pure
sizeof
typeof
unsized
virtual
yield
